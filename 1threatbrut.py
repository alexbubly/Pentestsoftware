from concurrent.futures import ThreadPoolExecutor
from urllib3 import PoolManager
from urllib3.exceptions import TimeoutError, RequestError, HTTPError

class Async():
    # Number of threads
    workers = 50
    # Iterator for objects
    requests = [x for x in range(100)]
    # pool of requests
    httpPool = PoolManager()

    method = 'GET'
    url = 'http://google.com'

    def main(self):
        # pool of requests
        try:
            r = Async.httpPool.request(Async.method, Async.url, fields={})
            if r.status == 200:
                print(r.data.decode('utf-8'))
            else:
                print('HTTP status is %s' % r.status)

        except (TimeoutError, RequestError, HTTPError) as e:
            print('Error %s' % e)

with ThreadPoolExecutor(Async.workers) as asyncPool:
    for _ in asyncPool.map(Async.main, Async.requests):
        pass